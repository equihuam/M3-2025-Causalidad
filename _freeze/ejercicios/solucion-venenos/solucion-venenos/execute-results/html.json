{
  "hash": "10dceb89e2378c0b63a0450914520ab3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"venenos\"\nauthor: [\"Miguel Equihua\", \"Elio Lagunes\"]\ndate: \"2024-02-06\"\ndraft: true\noutput: html_document\n---\n\n\n\n\n\n<center>Tratamiento</center>\n\n| Veneno | A    | B    | C    | D    |\n|--------|------|------|------|------|\n| I      | 0.31 | 0.82 | 0.43 | 0.45 |\n|        | 0.45 | 1.10 | 0.45 | 0.71 |\n|        | 0.46 | 0.88 | 0.63 | 0.66 |\n|        | 0.43 | 0.72 | 0.76 | 0.62 |\n| II     | 0.36 | 0.92 | 0.44 | 0.56 |\n|        | 0.29 | 0.61 | 0.35 | 1.02 |\n|        | 0.40 | 0.49 | 0.31 | 0.71 |\n|        | 0.23 | 1.24 | 0.40 | 0.38 |\n| III    | 0.22 | 0.30 | 0.23 | 0.30 |\n|        | 0.21 | 0.37 | 0.25 | 0.36 |\n|        | 0.18 | 0.38 | 0.24 | 0.31 |\n|        | 0.23 | 0.29 | 0.22 | 0.33 |\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nvenenos <- read_excel(\"Venenos.xlsx\", skip = 1, col_names = TRUE)\nvenenos$Veneno <-  rep(c(\"I\", \"II\", \"III\"), each = 4)\nnames(venenos) <- str_to_lower(names(venenos))\n\nvenenos <- venenos %>% pivot_longer(cols = c(\"a\", \"b\", \"c\", \"d\"), \n                         names_to = \"antidoto\", values_to = \"tsv\", )\n\nvenenos <- venenos %>% mutate(veneno = factor(veneno), \n                              antidoto = factor(antidoto))\n\n\nhead(venenos)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  veneno antidoto   tsv\n  <fct>  <fct>    <dbl>\n1 I      a         0.31\n2 I      b         0.82\n3 I      c         0.43\n4 I      d         0.45\n5 I      a         0.45\n6 I      b         1.1 \n```\n\n\n:::\n:::\n\n\n\n### Exploración de los datos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Medias\nven_med <- venenos %>% group_by(veneno, antidoto) %>% \n            summarise(media = mean(tsv, na.rm = TRUE), .groups = \"drop\")\nven_med  %>% pivot_wider(names_from = antidoto, values_from = media) %>%\n             knitr::kable(caption = \"Medias de los tratamientos\", digits = 2)\n```\n\n::: {.cell-output-display}\n\n\nTable: Medias de los tratamientos\n\n|veneno |    a|    b|    c|    d|\n|:------|----:|----:|----:|----:|\n|I      | 0.41| 0.88| 0.57| 0.61|\n|II     | 0.32| 0.81| 0.38| 0.67|\n|III    | 0.21| 0.33| 0.23| 0.32|\n\n\n:::\n\n```{.r .cell-code}\n#Varianzas\nvenenos %>% group_by(veneno, antidoto) %>% \n            summarise(var = var(tsv, na.rm = TRUE), .groups = \"drop\") %>%                              pivot_wider(names_from = antidoto, values_from = var) %>%  \n            knitr::kable(caption = \"Varianzas de los tratamientos\", digits = 4)\n```\n\n::: {.cell-output-display}\n\n\nTable: Varianzas de los tratamientos\n\n|veneno |      a|      b|      c|      d|\n|:------|------:|------:|------:|------:|\n|I      | 0.0048| 0.0259| 0.0246| 0.0127|\n|II     | 0.0057| 0.1131| 0.0032| 0.0734|\n|III    | 0.0005| 0.0022| 0.0002| 0.0007|\n\n\n:::\n\n```{.r .cell-code}\n#tapply(venenos$tsv, list(venenos$veneno, venenos$antidoto), mean)\t\n#tapply(venenos$tsv, list(venenos$veneno, venenos$antidoto), var)\n```\n:::\n\n\n\nse nota algo de heterogeneidad de varianzas Intentemos como primer modelo el completo.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninteraction.plot(venenos$veneno, \n                 trace.factor = venenos$antidoto,\n                 response = venenos$tsv,\n                 ylab = \"sobrevivencia (horas)\",\n                 trace.label = \"antidoto\",\n                 xlab = \"veneno\")\n```\n\n::: {.cell-output-display}\n![](solucion-venenos_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(venenos, aes(x = veneno, y = tsv, group = antidoto, color = antidoto)) + \n  geom_point(show.legend = FALSE) +\n  stat_summary(fun.y = mean, geom = \"line\", aes(linetype = antidoto))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](solucion-venenos_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nveneno.lm1 <- lm(tsv ~ veneno * antidoto, data=venenos)\nsummary(veneno.lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = tsv ~ veneno * antidoto, data = venenos)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.32500 -0.04875  0.00500  0.04312  0.42500 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(>|t|)    \n(Intercept)          0.41250    0.07457   5.532 2.94e-06 ***\nvenenoII            -0.09250    0.10546  -0.877   0.3862    \nvenenoIII           -0.20250    0.10546  -1.920   0.0628 .  \nantidotob            0.46750    0.10546   4.433 8.37e-05 ***\nantidotoc            0.15500    0.10546   1.470   0.1503    \nantidotod            0.19750    0.10546   1.873   0.0692 .  \nvenenoII:antidotob   0.02750    0.14914   0.184   0.8547    \nvenenoIII:antidotob -0.34250    0.14914  -2.297   0.0276 *  \nvenenoII:antidotoc  -0.10000    0.14914  -0.671   0.5068    \nvenenoIII:antidotoc -0.13000    0.14914  -0.872   0.3892    \nvenenoII:antidotod   0.15000    0.14914   1.006   0.3212    \nvenenoIII:antidotod -0.08250    0.14914  -0.553   0.5836    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1491 on 36 degrees of freedom\nMultiple R-squared:  0.7335,\tAdjusted R-squared:  0.6521 \nF-statistic:  9.01 on 11 and 36 DF,  p-value: 1.986e-07\n```\n\n\n:::\n\n```{.r .cell-code}\nanova(veneno.lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: tsv\n                Df  Sum Sq Mean Sq F value    Pr(>F)    \nveneno           2 1.03301 0.51651 23.2217 3.331e-07 ***\nantidoto         3 0.92121 0.30707 13.8056 3.777e-06 ***\nveneno:antidoto  6 0.25014 0.04169  1.8743    0.1123    \nResiduals       36 0.80073 0.02224                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\nEste modelo sugiere que la interacción veneno:antidoto no es significativa. sin embargo, esta situación podría deberse a la heterogeneidad de varianzas. una posibilidad es transformar a logaritmos la variable de respuesta.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#tapply(log(tsv), list(veneno, antidoto), mean)\t\n#tapply(log(tsv), list(veneno, antidoto), var)\n\n# Medias\nvenenos %>% group_by(veneno, antidoto) %>% \n            summarise(m_log = mean(log(tsv), na.rm = TRUE), .groups = \"drop\") %>% \n            pivot_wider(names_from = antidoto, values_from = m_log) %>%  \n            knitr::kable(caption = \"Medias de los tratamientos\", digits = 2)\n```\n\n::: {.cell-output-display}\n\n\nTable: Medias de los tratamientos\n\n|veneno |     a|     b|     c|     d|\n|:------|-----:|-----:|-----:|-----:|\n|I      | -0.90| -0.14| -0.59| -0.51|\n|II     | -1.16| -0.27| -0.99| -0.47|\n|III    | -1.56| -1.10| -1.45| -1.13|\n\n\n:::\n\n```{.r .cell-code}\n#Varianzas\nvenenos %>% group_by(veneno, antidoto) %>% \n            summarise(v_log = var(log(tsv), na.rm = TRUE), .groups = \"drop\") %>%  \n            pivot_wider(names_from = antidoto, values_from = v_log) %>%  \n            knitr::kable(caption = \"Varianzas de los tratamientos\", digits = 4)\n```\n\n::: {.cell-output-display}\n\n\nTable: Varianzas de los tratamientos\n\n|veneno |      a|      b|      c|      d|\n|:------|------:|------:|------:|------:|\n|I      | 0.0341| 0.0315| 0.0746| 0.0404|\n|II     | 0.0602| 0.1723| 0.0235| 0.1719|\n|III    | 0.0114| 0.0195| 0.0030| 0.0064|\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nveneno.lm2 <- lm(log(tsv) ~ veneno * antidoto, data=venenos)\nsummary(veneno.lm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = log(tsv) ~ veneno * antidoto, data = venenos)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.50006 -0.11846  0.01995  0.12202  0.48733 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(>|t|)    \n(Intercept)         -0.89755    0.11626  -7.720 3.82e-09 ***\nvenenoII            -0.26383    0.16442  -1.605 0.117330    \nvenenoIII           -0.66727    0.16442  -4.058 0.000254 ***\nantidotob            0.75768    0.16442   4.608 4.94e-05 ***\nantidotoc            0.30281    0.16442   1.842 0.073777 .  \nantidotod            0.38891    0.16442   2.365 0.023523 *  \nvenenoII:antidotob   0.13472    0.23253   0.579 0.565960    \nvenenoIII:antidotob -0.29379    0.23253  -1.263 0.214553    \nvenenoII:antidotoc  -0.13101    0.23253  -0.563 0.576659    \nvenenoIII:antidotoc -0.18730    0.23253  -0.805 0.425823    \nvenenoII:antidotod   0.30494    0.23253   1.311 0.198023    \nvenenoIII:antidotod  0.04953    0.23253   0.213 0.832508    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2325 on 36 degrees of freedom\nMultiple R-squared:  0.8252,\tAdjusted R-squared:  0.7718 \nF-statistic: 15.45 on 11 and 36 DF,  p-value: 1.643e-10\n```\n\n\n:::\n\n```{.r .cell-code}\nanova(veneno.lm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: log(tsv)\n                Df Sum Sq Mean Sq F value    Pr(>F)    \nveneno           2 5.2375 2.61874 48.4324 6.195e-11 ***\nantidoto         3 3.5572 1.18572 21.9295 2.987e-08 ***\nveneno:antidoto  6 0.3957 0.06596  1.2199    0.3189    \nResiduals       36 1.9465 0.05407                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\nEl resultado se sostiene, ahora aún más claramente.\n\n**¿cual es el antidoto más eficaz?**\\\nEs el que produce el tiempo de sobrevivencia más grande. Aparentemente este antídoto es el B para todos los venenos probados (recordar que la interacción no fue significativa). ¿Es este antídoto significativamente diferente de los demás?\n\ny = a + b1x1 + b2x2 + b3z1 + b4z2\n\nlas betas son los valores estimados. Es lo que está en la columna *Estimate*\n\nAI: a BI: a + b1 CI: a + b2.......\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncontrasts(venenos$antidoto)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  b c d\na 0 0 0\nb 1 0 0\nc 0 1 0\nd 0 0 1\n```\n\n\n:::\n\n```{.r .cell-code}\ncontrasts(venenos$veneno)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    II III\nI    0   0\nII   1   0\nIII  0   1\n```\n\n\n:::\n:::\n\n\n\n### Estimadores\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#tapply(log(venenos$tsv), list(venenos$veneno, venenos$antidoto), mean)\n\nvenenos %>% group_by(veneno, antidoto) %>% \n            summarise(media = mean(log(tsv), na.rm = TRUE), .groups = \"drop\") %>%\n            pivot_wider(names_from = antidoto, values_from = media) %>%  \n            knitr::kable(caption = \"Medias de los tratamientos (resumen)\", digits = 2)\n```\n\n::: {.cell-output-display}\n\n\nTable: Medias de los tratamientos (resumen)\n\n|veneno |     a|     b|     c|     d|\n|:------|-----:|-----:|-----:|-----:|\n|I      | -0.90| -0.14| -0.59| -0.51|\n|II     | -1.16| -0.27| -0.99| -0.47|\n|III    | -1.56| -1.10| -1.45| -1.13|\n\n\n:::\n\n```{.r .cell-code}\nbetas <- coef(veneno.lm2)\ndesign <- unique(model.matrix(veneno.lm2))\nknitr::kable(t(array(betas %*% t(design), dim = c(4,3), \n               dimnames = list(levels(venenos$antidoto), levels(venenos$veneno)))),\n             caption = \"Medias de los tratamientos (matriz)\", digits = 2)\n```\n\n::: {.cell-output-display}\n\n\nTable: Medias de los tratamientos (matriz)\n\n|    |     a|     b|     c|     d|\n|:---|-----:|-----:|-----:|-----:|\n|I   | -0.90| -0.14| -0.59| -0.51|\n|II  | -1.16| -0.27| -0.99| -0.47|\n|III | -1.56| -1.10| -1.45| -1.13|\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nveneno.lm3 <- lm(log(tsv) ~ veneno + antidoto, data=venenos)\nsummary(veneno.lm3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = log(tsv) ~ veneno + antidoto, data = venenos)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.41827 -0.13020 -0.01135  0.10405  0.58670 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.88731    0.08349 -10.627 1.77e-13 ***\nvenenoII    -0.18666    0.08349  -2.236   0.0307 *  \nvenenoIII   -0.77515    0.08349  -9.284 9.82e-12 ***\nantidotob    0.70465    0.09641   7.309 5.27e-09 ***\nantidotoc    0.19671    0.09641   2.040   0.0476 *  \nantidotod    0.50707    0.09641   5.260 4.57e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2362 on 42 degrees of freedom\nMultiple R-squared:  0.7897,\tAdjusted R-squared:  0.7646 \nF-statistic: 31.54 on 5 and 42 DF,  p-value: 3.401e-13\n```\n\n\n:::\n\n```{.r .cell-code}\nanova(veneno.lm3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: log(tsv)\n          Df Sum Sq Mean Sq F value    Pr(>F)    \nveneno     2 5.2375 2.61874  46.958 1.948e-11 ***\nantidoto   3 3.5572 1.18572  21.262 1.560e-08 ***\nResiduals 42 2.3423 0.05577                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndesign <- unique(model.matrix(veneno.lm3))\ndesign\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   (Intercept) venenoII venenoIII antidotob antidotoc antidotod\n1            1        0         0         0         0         0\n2            1        0         0         1         0         0\n3            1        0         0         0         1         0\n4            1        0         0         0         0         1\n17           1        1         0         0         0         0\n18           1        1         0         1         0         0\n19           1        1         0         0         1         0\n20           1        1         0         0         0         1\n33           1        0         1         0         0         0\n34           1        0         1         1         0         0\n35           1        0         1         0         1         0\n36           1        0         1         0         0         1\n```\n\n\n:::\n:::\n\n\n\nPara poner a prueba la diferencia entre niveles sigo el camino de recodificar los niveles del factor *antidoto*. Para hacerlo uso la función `{r}ecode_factor()` de la biblioteca *dplyr*\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvenenos$CvsOtros <-recode_factor(venenos$antidoto, \"b\"=\"a\", \"d\"=\"a\")\nvenenos$CAvsOtros <-recode_factor(venenos$antidoto, \"c\"=\"a\")\nvenenos\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 48 × 5\n   veneno antidoto   tsv CvsOtros CAvsOtros\n   <fct>  <fct>    <dbl> <fct>    <fct>    \n 1 I      a         0.31 a        a        \n 2 I      b         0.82 a        b        \n 3 I      c         0.43 c        a        \n 4 I      d         0.45 a        d        \n 5 I      a         0.45 a        a        \n 6 I      b         1.1  a        b        \n 7 I      c         0.45 c        a        \n 8 I      d         0.71 a        d        \n 9 I      a         0.46 a        a        \n10 I      b         0.88 a        b        \n# ℹ 38 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nveneno.lm4 <- lm(log(tsv) ~ CAvsOtros + veneno, data=venenos)\nsummary(veneno.lm4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = log(tsv) ~ CAvsOtros + veneno, data = venenos)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.49406 -0.10459 -0.00967  0.09443  0.58670 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.78895    0.07063 -11.170 2.71e-14 ***\nCAvsOtrosb   0.60630    0.08651   7.009 1.25e-08 ***\nCAvsOtrosd   0.40871    0.08651   4.725 2.48e-05 ***\nvenenoII    -0.18666    0.08651  -2.158   0.0366 *  \nvenenoIII   -0.77515    0.08651  -8.960 2.17e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2447 on 43 degrees of freedom\nMultiple R-squared:  0.7688,\tAdjusted R-squared:  0.7473 \nF-statistic: 35.75 on 4 and 43 DF,  p-value: 3.698e-13\n```\n\n\n:::\n\n```{.r .cell-code}\nanova(veneno.lm4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: log(tsv)\n          Df Sum Sq Mean Sq F value    Pr(>F)    \nCAvsOtros  2 3.3250 1.66251  27.768 1.808e-08 ***\nveneno     2 5.2375 2.61874  43.740 4.319e-11 ***\nResiduals 43 2.5744 0.05987                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(veneno.lm3, veneno.lm4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nModel 1: log(tsv) ~ veneno + antidoto\nModel 2: log(tsv) ~ CAvsOtros + veneno\n  Res.Df    RSS Df Sum of Sq     F  Pr(>F)  \n1     42 2.3423                             \n2     43 2.5744 -1  -0.23216 4.163 0.04764 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\nComparando el mejor modelo hasta ahora, el `veneno.lm3`, con el que acabo de construir\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(veneno.lm4, veneno.lm3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nModel 1: log(tsv) ~ CAvsOtros + veneno\nModel 2: log(tsv) ~ veneno + antidoto\n  Res.Df    RSS Df Sum of Sq     F  Pr(>F)  \n1     43 2.5744                             \n2     42 2.3423  1   0.23216 4.163 0.04764 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\nEl resultado no fue muy bueno.\n\n**Ejercicio:** Propón otros modelos con *recodificación* del factor *antidoto* y comenta los resultados.\n\nobtengo intervalos de confianza para los términos en el modelo. Para facilitar la interpretabilidad de los resultados aplica el *anti logarítmo*,`exp()`, de la respuesta *tsv*. Recuerda que los coeficientes están expresados todos con relación al tratamiento factorial *venenoI* y *antiveneoA*.\n\n**Ejercicio:** Haz los cálculos para recuperar los valores promedio predichos por el modelo para cada condición.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nveneno_coef <- coefficients(veneno.lm3)\n\ntarea <- c(veneno_coef[1])\nfor (v in veneno_coef[2:length(veneno_coef)])\n{\n   tarea <- rbind(tarea, veneno_coef[1] + v) \n}\n\nexp(tarea)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      (Intercept)\ntarea   0.4117637\n        0.3416499\n        0.1896721\n        0.8330587\n        0.5012762\n        0.6836993\n```\n\n\n:::\n\n```{.r .cell-code}\ntapply(venenos$tsv, list(venenos$veneno, venenos$antidoto), mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         a     b      c      d\nI   0.4125 0.880 0.5675 0.6100\nII  0.3200 0.815 0.3750 0.6675\nIII 0.2100 0.335 0.2350 0.3250\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvenenos.interv <- exp(confint(veneno.lm3, ci.fit=T, conf.level=0.95))\nvenenos.interv\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                2.5 %    97.5 %\n(Intercept) 0.3479138 0.4873315\nvenenoII    0.7010627 0.9819960\nvenenoIII   0.3892054 0.5451697\nantidotob   1.6654465 2.4576747\nantidotoc   1.0021487 1.4788559\nantidotod   1.3668480 2.0170373\n```\n\n\n:::\n:::\n\n\n\neste resultado sugiere que el veneno que produce el mayor tiempo de sobrevivencia es el antídoto \"B\".\n",
    "supporting": [
      "solucion-venenos_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}