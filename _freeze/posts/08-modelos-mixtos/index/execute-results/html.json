{
  "hash": "46224d0f24bf6c5c43bd0e0d6f2a8267",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Modelos de Efectos Mixtos\"\nauthor: [\"Miguel Equihua\", \"Elio Lagunes\"]\ndate: \"2025-02-04\"\nlang: es\ndraft: true\ncategories: [clase]\nformat:\n  html:\n    code-fold: true\n---\n\n\n\n\n![](images/arboles.jpeg){width=\"500\"}\n\n# Modelos Lineales de efectos mixtos\n\n## Ejemplo de rieles\n\n\n::: {.callout-note title=\"Calidad de rieles de ferrocarril\" collapse=\"true\"}\nUno de los principales problemas que enfrentan los ferrocarriles es la falla en las vías. Los defectos en los raíles, como parte básica de la vía, pueden provocar accidentes graves. La inspección de los rieles es crítica, considerando el enorme tráfico que soportan actualmente, la mayor velocidad y las cargas más pesadas. La inspección visual sólo puede detectar defectos superficiales y, a veces, signos evidentes de problemas internos, la _defectoscopia ultrasónica_ desempeña un papel insustituible en la inspección de los rieles durante su funcionamiento.\n\n![](images/ultrasonic-railway-rail-testing-01.jpg){wdth=60%}\n\n[Este ejemplo se explica en este libro](https://faculty.ksu.edu.sa/sites/default/files/probability_and_statistics_for_engineering_and_the_sciences.pdf). \n:::\n\nEl estudio de las fuerzas y tensiones no destructivas en los materiales proporciona información importante para un diseño de ingeniería eficaz. El artículo _Zero-Force Travel-Time Parameters for Ultrasonic Head-Waves in Railroad_ (Materials Evaluation,\n1985: 854-858) reporta un estudio del **tiempo de tránsito** de un _cierto tipo de onda_ que se obtiene al someter rieles de ferrocarril a esfuerzos de tensión longitudinal. Se realizaron tres mediciones en cada uno de seis rieles seleccionados aleatoriamente de una población más amplia de ellos. Los investigadores buscaban caracterizar la variación en el tiempo de viaje como referencia para describir la _variabilidad_ ___típica___ _entre los rieles_ que estaban adquiriendo y usando. Los ingenieros se interesaban en precisar la variabilidad atribuible al ejercicio de realizar las mediciones en un mismo riel y la variailidad que expresan los distintos rieles. Los datos son valores en nanosegundos, resultado de restar 36.1 $\\mu s$ a cada observación.\n\nEste ejemplo es un caso simple de efectos aleatorios. En resumen, seis rieles fueron tomados al azar y sometidos a prueba tres veces cada uno mediante la medición del tiempo que le toma a cierto tipo de ondas ultrasónicas viajar a lo largo del riel. La Única _condición experimental_ que cambia entre observaciones es el riel.\n\nClaramente el estudio tiene un solo criterio de clasificación, como posible condición de contraste. La intención del estudio fue la determinación de: \n\n1. **Tiempo de tránsito \"típico\"** de un riel (tiempo esperado de tránsito) \n2. _Variación_ en el tiempo de tránsito promedio _entre los rieles_ (variabilidad entre rieles) \n3. _Variación al medir_ el tiempo observado de tránsito _en un mismo riel_ (variabilidad dentro de rieles)\n\n\n$$\ny_{ij} = \\mu + \\beta_{1} R_{i} + \\varepsilon_{i(j)}\n$$\n\nUtilizaremos la biblioteca `nlme` (_Linear and Nonlinear Mixed Effects Models_, de tipo Gausiano o normal) para ajustar los modelos de *efectos mixtos* y aprovecharé para que veamos dos bibliotecas de graficación de _calidad publicación_:  `lattice` y `ggplot2` .\n\n**Lattice contiene estas opciones:**\n\n| tipo de gráfica | descripción               | ejemplo de fórmula |\n|-----------------|---------------------------|--------------------|\n| barchart        | bar chart                 | x\\~A or A\\~x       |\n| bwplot          | boxplot                   | x\\~A or A\\~x       |\n| cloud           | 3D scatterplot            | z\\~x\\*y\\|A         |\n| contourplot     | 3D contour plot           | z\\~x\\*y            |\n| densityplot     | kernal density plot       | \\~x\\|A\\*B          |\n| dotplot         | dotplot                   | \\~x\\|A             |\n| histogram       | histogram                 | \\~x                |\n| levelplot       | 3D level plot             | z\\~y\\*x            |\n| parallel        | parallel coordinates plot | data frame         |\n| splom           | scatterplot matrix        | data frame         |\n| stripplot       | strip plots               | A\\~x or x\\~A       |\n| xyplot          | scatterplot               | y\\~x\\|A            |\n| wireframe       | 3D wireframe graph        | z\\~y\\*x            |\n\nLas gráficas con `lattice` tienen todo un entorno de soporte. Por ejemplo los aspectos que pueden ajustarse se pueden ver con `trellis.par.get()` y se ajustan con `trellis.par.set()`. Se trata de una aproximación a la **visualización de datos** muy interesante que se desarrolló en la época en la que los lenguajes de programación **S** y más adelante **R**, estaban apareciendo. Quizás popr eso encontramos algo de `lattice` contruido dentro de `nlme`.\n\nActualmente, resulta quizás más práctico el enfoque que ha desarrollado `ggplot2`, basada en una [semántica de graficación que Hadley Wickham explica originamente en su libro publicado en 2009](https://link.springer.com/book/10.1007/978-0-387-98141-3). Actualmente Hadley trabaja con otros dos coautores (Danielle Navarro y Thomas Lin Pedersen) en al 3ra. edición,  lo hacen como un [_preprint_ que pueden encontrar aquí](https://ggplot2-book.org/). La gran influencia de este planteamiento a la producción de gráficas de datos ha dado lugar a muchas ideas y recursos de ayuda que fácilmente se pueden encontrar en _la Web_ \n\nlos datos con los que trabajaremos en esta sesión están en la tabla `Rail` de la biblioteca *nlme*. Para acomodarlos a mis propósitos los copie a mi espacio de trabajo y los guardé en una variable con un nombre de mi gusto. Los datos de los rieles están ordenados según fueron ensayados.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(nlme)\nlibrary(lattice)\nlibrary(ggplot2)\n\nrieles <- Rail\nnames(rieles) <- c(\"riel\", \"viaje\")\nstr(rieles)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nClasses 'nffGroupedData', 'nfGroupedData', 'groupedData' and 'data.frame':\t18 obs. of  2 variables:\n $ riel : Ord.factor w/ 6 levels \"2\"<\"5\"<\"1\"<\"6\"<..: 3 3 3 1 1 1 5 5 5 6 ...\n $ viaje: num  55 53 54 26 37 32 78 91 85 92 ...\n - attr(*, \"labels\")=List of 1\n  ..$ y: chr \"Zero-force travel time\"\n - attr(*, \"units\")=List of 1\n  ..$ y: chr \"(nanoseconds)\"\n - attr(*, \"formula\")=Class 'formula'  language travel ~ 1 | Rail\n  .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv> \n - attr(*, \"order.groups\")= logi TRUE\n```\n\n\n:::\n:::\n\n\n\n\nLa tabla `rieles` fue creada como una **estructura agrupada** con la función `groupeData` de la biblioteca `nlme`. Veremos más adelante como usar esta función. Esta función agrega *metadatos* a la tabla. Si interesa hacer cambios a los *metadatos* de la tabla agrupada hay que usar la función `update` que ejemplificaré a continuación. Lo primero es explorar los atributos asignados.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(rieles)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$names\n[1] \"riel\"  \"viaje\"\n\n$class\n[1] \"nffGroupedData\" \"nfGroupedData\"  \"groupedData\"    \"data.frame\"    \n\n$row.names\n [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\"\n[16] \"16\" \"17\" \"18\"\n\n$labels\n$labels$y\n[1] \"Zero-force travel time\"\n\n\n$units\n$units$y\n[1] \"(nanoseconds)\"\n\n\n$formula\ntravel ~ 1 | Rail\n\n$order.groups\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n\nAhora cambiemos estos atributos para que todo esté expresado en español y de paso corregir la fórmula, que tal como está, pierde la referencia adecuada a las variables que contiene la tabla, pues yo cambié los nombres de las variables.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrieles  <- update(rieles, formula = viaje ~ 1 | riel, FUN = mean,\n                  labels = list(y = \"Tiempo de viaje con fuerza cero\"),\n                  units = list(y = \"(nano segundos)\"))\n\n# Encontré un detallito raro de atributos que se quedan con basura. \n# Aunque no parecen producir ningún problema, esta es una manera de limpiarla.\nattributes(attributes(rieles)$formula)$\".Environment\" <- environment()\nenvironment(attributes(rieles)$FUN) <- environment()\nattributes(rieles)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$names\n[1] \"riel\"  \"viaje\"\n\n$row.names\n [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\"\n[16] \"16\" \"17\" \"18\"\n\n$class\n[1] \"nffGroupedData\" \"nfGroupedData\"  \"groupedData\"    \"data.frame\"    \n\n$formula\nviaje ~ 1 | riel\n\n$labels\n$labels$y\n[1] \"Tiempo de viaje con fuerza cero\"\n\n\n$units\n$units$y\n[1] \"(nano segundos)\"\n\n\n$FUN\nfunction (x, ...) \nUseMethod(\"mean\")\n\n$order.groups\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n\nA esta tabla se le ha aplicado la función `groupedData` con la fórmula:\n\nviaje \\~ 1\\| riel\n\nEsta estrategia permite darle mantenimiento a los metadatos, que incluyen indicaciones sobre el agrupamiento de los datos en la tablas. Para aprovechar esta estructura podemos usar funciones especiales, por cierto, dentro del paquete `nmle`, la función `plo` ha sido diseñada para usar opciones de graficación de *lattice*, puedes averiguar un poco más al respecto con `help(plot.nmGroupedData)`:\n\n-   `gapply` - aplica funciones por grupos\n-   `gsummary` - calcula los resúmenes de datos por grupos\n\nPor lo pronto veamos los datos, con la función de graficación de *lattice* `stripplot`, que toma el factor *riel*, por lo tanto se trata de *renglones* cualitativos sobre los que se grafican los datos de *velocidad de viaje*.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(repr.plot.width=10, repr.plot.height=6)\n\nstripplot(rieles$riel ~ rieles$viaje, pch = 19, col = \"red\", cex = 1.25,\n          main = list(label = \"Análisis de integridad estructural de rieles\", cex =2),\n          xlab = list(label = \"tiempo de viaje (ns)\", cex = 2),\n          ylab =  list(label = \"riel\", cex = 2), \n          scales = list(tck = c(2,0), x = list(cex = 2), y = list(cex = 2)))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n[¿Cómo se ven estos datos? ¿qué piensas que habría que hacer?]{style=\"color:GoldenRod\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(rieles, aes(x = viaje, y = riel, group = riel)) + \n       geom_point(shape = 19, size = 4, color = \"blue\") +\n       labs(title = \"Análisis de integridad estructural de rieles\") +\n       xlab(label = \"tiempo de viaje (ns)\") +\n       ylab(label = \"riel\") +\n       theme(text = element_text(size=26), \n             axis.text.x = element_text(angle=0, hjust=1)) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngsummary(rieles)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  riel    viaje\n2    2 31.66667\n5    5 50.00000\n1    1 54.00000\n6    6 82.66667\n3    3 84.66667\n4    4 96.00000\n```\n\n\n:::\n:::\n\n\n\n\n¿Cómo se asigna la estructura de agrupación a una tabla de datos? Como dije al principio, se puede usar la función groupedData de la biblioteca *nlme*. Hagamos un ahora un ensayo de este proceso.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrieles.sg <- as.data.frame(rieles)\n```\n:::\n\n\n\n\nEstructura de la tabla **sin** información de agrupamiento:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(rieles.sg) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t18 obs. of  2 variables:\n $ riel : Ord.factor w/ 6 levels \"2\"<\"5\"<\"1\"<\"6\"<..: 3 3 3 1 1 1 5 5 5 6 ...\n $ viaje: num  55 53 54 26 37 32 78 91 85 92 ...\n```\n\n\n:::\n:::\n\n\n\n\nLos atributos quue contiene este objeto son estos:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(rieles.sg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$names\n[1] \"riel\"  \"viaje\"\n\n$row.names\n [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\"\n[16] \"16\" \"17\" \"18\"\n\n$class\n[1] \"data.frame\"\n```\n\n\n:::\n:::\n\n\n\n\nTomo los datos sin agrupamiento y proporciono los *metadatos* que definen la **estructura de agrupamiento** que caracterizan a la tabla :\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrieles.g <- groupedData (viaje ~ 1 | riel, data = rieles.sg, \n                         FUN = mean,\n                         units = list( x = \"(ns)\"),\n                         labels = list(x = \"riel\", \n                                       y = \"tiempo de tránsito de fuerza cero\"),\n                         )\nstr(rieles.g)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nClasses 'nffGroupedData', 'nfGroupedData', 'groupedData' and 'data.frame':\t18 obs. of  2 variables:\n $ riel : Ord.factor w/ 6 levels \"2\"<\"5\"<\"1\"<\"6\"<..: 3 3 3 1 1 1 5 5 5 6 ...\n $ viaje: num  55 53 54 26 37 32 78 91 85 92 ...\n - attr(*, \"formula\")=Class 'formula'  language viaje ~ 1 | riel\n  .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv> \n - attr(*, \"labels\")=List of 2\n  ..$ x: chr \"riel\"\n  ..$ y: chr \"tiempo de tránsito de fuerza cero\"\n - attr(*, \"units\")=List of 1\n  ..$ x: chr \"(ns)\"\n - attr(*, \"FUN\")=function (x, ...)  \n - attr(*, \"order.groups\")= logi TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.frame(sg=rieles.sg, g=rieles.g)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   sg.riel sg.viaje g.riel g.viaje\n1        1       55      1      55\n2        1       53      1      53\n3        1       54      1      54\n4        2       26      2      26\n5        2       37      2      37\n6        2       32      2      32\n7        3       78      3      78\n8        3       91      3      91\n9        3       85      3      85\n10       4       92      4      92\n11       4      100      4     100\n12       4       96      4      96\n13       5       49      5      49\n14       5       51      5      51\n15       5       50      5      50\n16       6       80      6      80\n17       6       85      6      85\n18       6       83      6      83\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngsummary(rieles.sg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    riel viaje\n26     2    26\n32     2    32\n37     2    37\n49     5    49\n50     5    50\n51     5    51\n53     1    53\n54     1    54\n55     1    55\n78     3    78\n80     6    80\n83     6    83\n85     3    85\n91     3    91\n92     4    92\n96     4    96\n100    4   100\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngsummary(rieles.g)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  riel    viaje\n2    2 31.66667\n5    5 50.00000\n1    1 54.00000\n6    6 82.66667\n3    3 84.66667\n4    4 96.00000\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(rieles.g, aes(x = viaje, y = riel, group = riel)) + \n       geom_point(shape = 19, size = 4, color = \"blue\") +\n       labs(title = \"Análisis de integridad estructural de rieles (rieles.g)\") +\n       xlab(label = \"tiempo de viaje (ns)\") +\n       ylab(label = \"riel\") +\n       theme(text = element_text(size=26), \n             axis.text.x = element_text(angle=0, hjust=1)) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\nComo hemos visto, cambiar los metadatos de la tabla se hace con la función `update()`.\n\nComo una demostración simple de esto, le cambiaré la etiqueta asociada a la variable de respuesta en la estructura de agrupamiento. Con esto.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrieles.g1 <- update(rieles.g, labels = list(y=\"tiempo (ns)\"))\nplot(rieles.g1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\nPrimera posibilidad de análisis. Modelo lineal simple. Es una elección natural en este caso, pues estima la media general. Hay que recordar seleccionar contrastes de tipo \"tratamiento\" aun para factores ordenados.\n\n[¿Cómo representamos al riel en el modelo?]{style=\"color:GoldenRod\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions ()$contrasts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        unordered           ordered \n\"contr.treatment\"      \"contr.poly\" \n```\n\n\n:::\n:::\n\n\n\n\nEmpecemos por construir el modelo nulo. [¿qué resultados nos ofrece este modelo?]{style=\"color:GoldenRod\"}.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrieles.m1 <- lm(viaje ~ 1, data =rieles.g)\nsummary(rieles.m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = viaje ~ 1, data = rieles.g)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-40.50 -16.25   0.00  18.50  33.50 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   66.500      5.573   11.93  1.1e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 23.65 on 17 degrees of freedom\n```\n\n\n:::\n:::\n\n\n\n\nAsí, tengo una estimación del tiempo promedio de tránsito de: 66.5. El error estándar que estimo es: 5.573\n\n[¿cómo quedan los residuos de este modelo?]{style=\"color:GoldenRod\"}\n\nEl gráfico de *cajas y bigotes* o *cajas y alambres* es interesante para explorar lo que está pasando con los rieles. La versión que produce la función `bwplot()` de la biblioteca *lattice* es un buen recurso.\n\n[¿Qué piensas de esta gráfica? ¿Te gusta lo que ves?]{style=\"color:GoldenRod\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbwplot(rieles.g$riel ~ resid(rieles.m1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(rieles.g, aes(x = viaje, y = riel, group = riel)) + \n       stat_boxplot(geom='errorbar', linetype=2, width=0.5) + \n       geom_boxplot(shape = 19, size = 0.5, color = \"blue\") +\n       labs(title = \"Análisis de integridad estructural de rieles (rieles.g)\") +\n       xlab(label = \"tiempo de viaje (ns)\") +\n       ylab(label = \"riel\") +\n       theme(text = element_text(size=26), \n             axis.text.x = element_text(angle=0, hjust=1)) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n\nAl ignorar el efecto de los rieles, dentro de los que repito la prueba para obtener las medidas de interés se produce un defecto que se ve claramente en esta gráfica de residuos.\n\nLos residuos de cada riel tienen todos el mismo signo. Es decir se mantiene un efecto sistemático importante en ellos.\n\n[Te parecería buena idea agregar el término que representa al riel para resolver este problema?]{style=\"color:GoldenRod\"}\n\n[¿Es fijo o aleatorio?]{style=\"color:GoldenRod\"}\n\nEste nuevo modelo permite que cada riel sea representado por una media diferente. Suponiendo efectos fijos, la estimación del parámetro de interés es esta.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrieles.m2 <- lm(viaje ~ riel - 1, data =rieles.g)\nrieles.m2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = viaje ~ riel - 1, data = rieles.g)\n\nCoefficients:\nriel2  riel5  riel1  riel6  riel3  riel4  \n31.67  50.00  54.00  82.67  84.67  96.00  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(rieles.m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: viaje\n          Df Sum Sq Mean Sq F value    Pr(>F)    \nriel       6  88911 14818.5  916.61 2.971e-15 ***\nResiduals 12    194    16.2                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(rieles.m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = viaje ~ riel - 1, data = rieles.g)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.6667 -1.0000  0.1667  1.0000  6.3333 \n\nCoefficients:\n      Estimate Std. Error t value Pr(>|t|)    \nriel2   31.667      2.321   13.64 1.15e-08 ***\nriel5   50.000      2.321   21.54 5.86e-11 ***\nriel1   54.000      2.321   23.26 2.37e-11 ***\nriel6   82.667      2.321   35.61 1.54e-13 ***\nriel3   84.667      2.321   36.47 1.16e-13 ***\nriel4   96.000      2.321   41.35 2.59e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.021 on 12 degrees of freedom\nMultiple R-squared:  0.9978,\tAdjusted R-squared:  0.9967 \nF-statistic: 916.6 on 6 and 12 DF,  p-value: 2.971e-15\n```\n\n\n:::\n:::\n\n\n\n\n\n[¿interpretación de este nuevo resultado?]{style=\"color:GoldenRod\"}\n\n........... [¿y los residuos? ¿cómo se ven ahora?]{style=\"color:GoldenRod\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbwplot(rieles.g$riel ~ resid(rieles.m2))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nres.m2 <- data.frame(resid = resid(rieles.m2), riel = rieles.g$riel)\nggplot(res.m2, aes(x = resid, y = riel, group = riel)) + \n       stat_boxplot(geom='errorbar', linetype=2, width=0.5) + \n       geom_boxplot(shape = 19, size = 0.5, color = \"blue\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n\nA pesar de que el modelo remueve los efectos sistemáticos asociados a las características particulares de los distintos rieles, no proporciona una representación satisfactoria del problema.\n\n[si los rieles fueran de efectos fijos ¿qué implicaría este modelo? ¿cuál sería una interpretación razonable del tratamiento **riel**?]{style=\"color:GoldenRod\"}\n\nAl suponer efectos fijos surge el problema de que se modelan de algún modo *variantes individuales* de los rieles que se usaron para realizar las pruebas. Desafortunadamente, tal clasificación no tiene ningún sentido en el contexto. Lo que interesa es estimar el tiempo de tránsito típico de cualquier riel en la *población de rieles* de la que se tomó la muestra.\n\nAdemás, la misma falta de correspondencia conceptual entre el modelo y la estimación que interesa, hace que este nuevo modelo no proporcione una clara estimación de la variación (componente de varianza), entre rieles, que es otra de las preguntas centrales de este estudio. Otro problema de este modelo de efectos fijos es que el número de parámetros crece linealmente con el número de rieles que se usan para realizar la prueba, generando un comportamiento extraño en el modelo respecto de la pregunta.\n\n#### El Modelo de efectos aleatorios ¿resuelves estos problemas?.\n\nEn este enfoque se considera a los rieles como un efecto aleatorio sobre la media general. Hay principalmente dos métodos para ajustar este tipo de modelos el de máxima verosimilitud (ML) y el de máxima verosimilitud restringida (REML, default). La función que utilizaremos para el caso lineal es `lme()` que se usa de modo muy semejante a `lm()` y `glm()`. Sin embargo, nótese que ahora el modelo tiene dos grupos de fórmulas, una para describir los efectos fijos (opción *fixed*) y otra para describir los aleatorios (opción *random*). Esté último es siempre una fórmula que tiene sólo el lado derecho (no hay interés en predecir medias, ¿recuerdas?) y da cuenta de los efectos aleatorios y de la estructura de agrupamiento de los datos. Un agrupamiento se representa mediante el símbolo de barra vertical: `|`. Ahora, ajustemos un modelo de este tipo para obtener la estimación de *máxima verosimilitud restringida* para los rieles.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrieles.m3 <- lme(fixed = viaje ~ 1, \n                 random = ~ 1 | riel, \n                 data = rieles.g)\nrieles.m3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed-effects model fit by REML\n  Data: rieles.g \n  Log-restricted-likelihood: -61.0885\n  Fixed: viaje ~ 1 \n(Intercept) \n       66.5 \n\nRandom effects:\n Formula: ~1 | riel\n        (Intercept) Residual\nStdDev:    24.80547 4.020779\n\nNumber of Observations: 18\nNumber of Groups: 6 \n```\n\n\n:::\n:::\n\n\n\n\n\n::: {.callou-caution style=\"color:GoldenRod\"}\n## Ayúdame a comentar estos resultados ¿qué te llama la atención?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary (rieles.m3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed-effects model fit by REML\n  Data: rieles.g \n      AIC      BIC   logLik\n  128.177 130.6766 -61.0885\n\nRandom effects:\n Formula: ~1 | riel\n        (Intercept) Residual\nStdDev:    24.80547 4.020779\n\nFixed effects:  viaje ~ 1 \n            Value Std.Error DF  t-value p-value\n(Intercept)  66.5  10.17104 12 6.538173       0\n\nStandardized Within-Group Residuals:\n        Min          Q1         Med          Q3         Max \n-1.61882658 -0.28217671  0.03569328  0.21955784  1.61437744 \n\nNumber of Observations: 18\nNumber of Groups: 6 \n```\n\n\n:::\n:::\n\n\n\n\n:::\n\nEl ajuste produce los estimadores que buscamos: 1. tiempo de tránsito típico = 66.5 2. Variabilidad entre rieles = 24.81 3. Variabilidad dentro de rieles = 4.02\n\nEn este caso los estimadores 1 y 3 son prácticamente idénticos a los obtenidos con el modelo lineal ordinario, pero esto no siempre es así. La coincidencia deriva de que la muestra está balanceada (mismo tamaño de muestra en cada riel). Además, ahora tengo un razonable estimador de la variación entre rieles (2).\n\n[¿Qué utilidad pueden tener estas estimaciones?]{style=\"color:GoldenRod\"}\n\nEl resumen del ajuste muestra dos criterios nuevos para comparar y evaluar modelos. Estas medidas son resultado de la búsqueda de alternativas para valorar modelos que no se centre en el famoso valor de *p*.\n\n-   AIC - Criterio de información de Akaike = -2 \\* logVerosimilitud + 2 numParámetros\n-   BIC - Criterio de información bayesiano = -2 \\* logVerosimilitud + numParámetros \\* log(N)\n\nEs bueno contar con ellos para comparar la calidad general de los modelos ajustados, pero no olviden que centrar nuestra atención en los intervalos de confianza es más informativo y potencialmente interesante.\n\nEn cualquier caso, \"entre más pequeño el valor del criterio, mejor\", pero no olvides que más interesantes son los intervalos de confianza que obtengas.Finalmente, veamos los residuos\n\n[¿Cómo se ven?]{style=\"color:GoldenRod\"}\n\n[¿Qué nos sugieren estos resultados?]{style=\"color:GoldenRod\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbwplot(rieles.g$riel ~ resid(rieles.m3))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n\nPuedo obtener los estimadores de los coeficientes igual que en el caso `lm()` y `glm()` con `coef()`, pero además puedo obtener los coeficientes de los componentes aleatorios con `random.effects()` (forma breve: `ranef()`). ¿Que hay de los intervalos de confianza de los parámetros de efectos fijos estimados?.\n\nComo he venido insistiendo, esta forma de mostrar resultados es cada vez más apreciada y es más conveniente que el enfoque de uso de valores de \"*p*\" en las publicaciones. La función `intervals()` supone un nivel de confianza del 95%, si no se le dice otra cosa.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef(rieles.m3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  (Intercept)\n2    31.96909\n5    50.14325\n1    54.10852\n6    82.52631\n3    84.50894\n4    95.74388\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nranef(rieles.m3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  (Intercept)\n2   -34.53091\n5   -16.35675\n1   -12.39148\n6    16.02631\n3    18.00894\n4    29.24388\n```\n\n\n:::\n:::\n\n\n\n\n[¿Qué piensas de estos estimadores de intervalos de confianza?]{style=\"color:GoldenRod\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nintervals(rieles.m3, 0.95)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nApproximate 95% confidence intervals\n\n Fixed effects:\n               lower est.    upper\n(Intercept) 44.33921 66.5 88.66079\n\n Random Effects:\n  Level: riel \n                   lower     est.    upper\nsd((Intercept)) 13.27436 24.80547 46.35335\n\n Within-group standard error:\n   lower     est.    upper \n2.695012 4.020779 5.998737 \n```\n\n\n:::\n:::\n\n\n\n\n\n## El modelo de glucógeno en ratas revisitado\n\nVolvamos a ver el ejemplo GLEX38 (Crawley p. 149) de Hígados de rata en el ejemplo presentado originalmente en Sokal & Rohlf (1981). Te recuerdo que se trata de un experimento con un solo factor con tres tratamientos administrados a seis ratas, dos por tratamiento. El análisis se complica por el hecho de que, para el an?lisis, se tomaron tres muestras del hígado de cada rata y se hicieron dos determinaciones de contenido de glucógeno en cada muestra. Así, podríamos decir, un tanto derogativamente, que hay seis **pseudoréplicas** por rata para dar un total de 36 lecturas en total. Pero quizás en lugar de hablar en estos términos deberíamos simmplemente reconocer que lo que estamos haciendo es organizar un muestreao para obtener el dato de la variable de respuesta en el experimento, en lugar de hacer una \"cosecha total\", que es la práctica ideal (pues evita introducir un fuente de \"ruido\" adicional).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nratas_g <- read.table(\"hígados-rata.DAT\", col.names=\"glucogeno\")\nratas_g$tratamiento <- factor(rep(c(\"t1\",\"t2\",\"t3\"),each=12))\nratas_g$rata <- factor(rep(paste(\"r\", 1:6, sep=\"\"), each=6))\nratas_g$muestraH <- factor(rep(c(\"m1\", \"m2\", \"m3\"), times=6, each=2))\n```\n:::\n\n\n\n\nLe doy estructura de grupos a la tabla\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nratas_g <- groupedData(glucogeno ~  1 | ordered(rata) / muestraH,\n                       data = ratas_g,\n                       labels= list(x = \"rata\", y = \"contenido de glucógeno\" ),\n                       FUN = mean)\nstr(ratas_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nClasses 'nmGroupedData', 'groupedData' and 'data.frame':\t36 obs. of  4 variables:\n $ glucogeno  : int  131 130 131 125 136 142 150 148 140 143 ...\n $ tratamiento: Factor w/ 3 levels \"t1\",\"t2\",\"t3\": 1 1 1 1 1 1 1 1 1 1 ...\n $ rata       : Factor w/ 6 levels \"r1\",\"r2\",\"r3\",..: 1 1 1 1 1 1 2 2 2 2 ...\n $ muestraH   : Factor w/ 3 levels \"m1\",\"m2\",\"m3\": 1 1 2 2 3 3 1 1 2 2 ...\n - attr(*, \"formula\")=Class 'formula'  language glucogeno ~ 1 | ordered(rata)/muestraH\n  .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv> \n - attr(*, \"formulaList\")=List of 2\n  ..$ ordered(rata):Class 'formula'  language ~ordered(rata)\n  .. .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv> \n  ..$ muestraH     :Class 'formula'  language ~muestraH\n  .. .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv> \n - attr(*, \"labels\")=List of 2\n  ..$ x: chr \"rata\"\n  ..$ y: chr \"contenido de glucógeno\"\n - attr(*, \"order.groups\")=List of 2\n  ..$ ordered(rata): logi TRUE\n  ..$ muestraH     : logi TRUE\n - attr(*, \"FUN\")=function (x, ...)  \n```\n\n\n:::\n:::\n\n\n\n\n\n### Exploración de los datos\n\nAprovechando las opciones de estructura de grupos puedo obtener resumenes exploratorios de manera muy simple.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.frame(promedio = tapply (ratas_g$glucogeno, ratas_g$rata, function(x) round(mean(x), 2)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   promedio\nr1   132.50\nr2   148.50\nr3   149.67\nr4   152.33\nr5   134.33\nr6   136.00\n```\n\n\n:::\n:::\n\n\n\n\nGraficación de los datos aprovechando la estructura agrupada que hemos adoptado.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ratas_g, inner =  ~ tratamiento, displayLeve=2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbwplot(glucogeno ~ tratamiento, boxmeans=T, data=ratas_g, \n     boxcol=14, xlab = \"Tratamiento\", ylab = \"Contenido de glucógeno\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n\n\n### Modelación\n\nVeamos el enfoque con un modelo lineal de efectos mixtos.\n\n::: {.callou-caution style=\"color:GoldenRod\"}\n## ¿Cual es la estructura fija?, me puedes decir cuál es la ecuación correspondiente\n:::\n\nLa estructura aleatoria de los datos, cuando tiene varias fuentes, se representa como una lista de efectos (modelos) en la función `lme()` de la biblioteca `nlme`. Otra posibilidad es usar la biblioteca `lme4` que contiene a la función `lmer()`. Al respecto, [esta lectura puede ser de innterés](http://staff.pubhealth.ku.dk/~jufo/courses/rm2018/nlmePackage.pdf)\n\nEste caso, como ya vimos, hay dos cosas en operación: \n\n1. Hay una muestra aleatoria de ratas distintas en cada tratamiento. Cabe esperar un valor promedio de glucógeno distinto para cada animal. Esto lo representaré en el primer componente de la lista. \n2. Hay una muestra aleatoria de fragmentos de hígado tomados de cada rata. Esperamos que estas muestras estimen una misma cantidad de glucógeno para cada animal. Esto lo representaré en el segundo componente de la lista.\n\nEn el código siguiente tanto el modelo \"1\" como el \"2\" son equivalente. Los presento como dos formas de plantear el modelo de efectos aleatorios. Hay que notar que **no es correcto** hacer comparaciones entre modelos que cambian en cuanto al componente \"fijo\" **si el ajuste se hace mediante el método \"REML\"**, en caso de tener hipótesis de interés en esta parte del modelo hay que emplear el método \"ML\".\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nratas.lme.m1 <- lme(fixed=glucogeno ~ tratamiento - 1, \n                    random=list(rata = ~ 1, muestraH= ~ 1),\n                    data=ratas_g)\nsummary(ratas.lme.m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed-effects model fit by REML\n  Data: ratas_g \n       AIC      BIC    logLik\n  231.6213 240.6003 -109.8106\n\nRandom effects:\n Formula: ~1 | rata\n        (Intercept)\nStdDev:    6.005399\n\n Formula: ~1 | muestraH %in% rata\n        (Intercept) Residual\nStdDev:    3.763863 4.600725\n\nFixed effects:  glucogeno ~ tratamiento - 1 \n                 Value Std.Error DF  t-value p-value\ntratamientot1 140.5000  4.707166  3 29.84811   1e-04\ntratamientot2 151.0000  4.707166  3 32.07875   1e-04\ntratamientot3 135.1667  4.707166  3 28.71509   1e-04\n Correlation: \n              trtmn1 trtmn2\ntratamientot2 0            \ntratamientot3 0      0     \n\nStandardized Within-Group Residuals:\n        Min          Q1         Med          Q3         Max \n-1.48211987 -0.47263005  0.03061539  0.42934293  1.82934636 \n\nNumber of Observations: 36\nNumber of Groups: \n              rata muestraH %in% rata \n                 6                 18 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nratas.lme.m2 <- lme(fixed = glucogeno ~ tratamiento - 1, \n                    random = ~ 1 | rata / muestraH,\n                    data=ratas_g) \nsummary(ratas.lme.m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed-effects model fit by REML\n  Data: ratas_g \n       AIC      BIC    logLik\n  231.6213 240.6003 -109.8106\n\nRandom effects:\n Formula: ~1 | rata\n        (Intercept)\nStdDev:    6.005399\n\n Formula: ~1 | muestraH %in% rata\n        (Intercept) Residual\nStdDev:    3.763863 4.600725\n\nFixed effects:  glucogeno ~ tratamiento - 1 \n                 Value Std.Error DF  t-value p-value\ntratamientot1 140.5000  4.707166  3 29.84811   1e-04\ntratamientot2 151.0000  4.707166  3 32.07875   1e-04\ntratamientot3 135.1667  4.707166  3 28.71509   1e-04\n Correlation: \n              trtmn1 trtmn2\ntratamientot2 0            \ntratamientot3 0      0     \n\nStandardized Within-Group Residuals:\n        Min          Q1         Med          Q3         Max \n-1.48211987 -0.47263005  0.03061539  0.42934293  1.82934636 \n\nNumber of Observations: 36\nNumber of Groups: \n              rata muestraH %in% rata \n                 6                 18 \n```\n\n\n:::\n:::\n\n\n\n\nPara comparar el efecto del tratamiento hay que usar el método \"ML\" y ajustar los modelos que contrastan la hipótesis de interés en el componente fijo.\n\nModelo \"nulo\" en cuanto a efectos fijos\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(ratas_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nClasses 'nmGroupedData', 'groupedData' and 'data.frame':\t36 obs. of  4 variables:\n $ glucogeno  : int  131 130 131 125 136 142 150 148 140 143 ...\n $ tratamiento: Factor w/ 3 levels \"t1\",\"t2\",\"t3\": 1 1 1 1 1 1 1 1 1 1 ...\n $ rata       : Factor w/ 6 levels \"r1\",\"r2\",\"r3\",..: 1 1 1 1 1 1 2 2 2 2 ...\n $ muestraH   : Factor w/ 3 levels \"m1\",\"m2\",\"m3\": 1 1 2 2 3 3 1 1 2 2 ...\n - attr(*, \"formula\")=Class 'formula'  language glucogeno ~ 1 | ordered(rata)/muestraH\n  .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv> \n - attr(*, \"formulaList\")=List of 2\n  ..$ ordered(rata):Class 'formula'  language ~ordered(rata)\n  .. .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv> \n  ..$ muestraH     :Class 'formula'  language ~muestraH\n  .. .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv> \n - attr(*, \"labels\")=List of 2\n  ..$ x: chr \"rata\"\n  ..$ y: chr \"contenido de glucógeno\"\n - attr(*, \"order.groups\")=List of 2\n  ..$ ordered(rata): logi TRUE\n  ..$ muestraH     : logi TRUE\n - attr(*, \"FUN\")=function (x, ...)  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nratas.lme.m3 <- lme(fixed=glucogeno ~ 1, data=ratas_g, \n                    random=~1|rata/muestraH, method=\"ML\") \nratas.lme.m3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed-effects model fit by maximum likelihood\n  Data: ratas_g \n  Log-likelihood: -119.8834\n  Fixed: glucogeno ~ 1 \n(Intercept) \n   142.2222 \n\nRandom effects:\n Formula: ~1 | rata\n        (Intercept)\nStdDev:    7.561272\n\n Formula: ~1 | muestraH %in% rata\n        (Intercept) Residual\nStdDev:    3.763863 4.600725\n\nNumber of Observations: 36\nNumber of Groups: \n              rata muestraH %in% rata \n                 6                 18 \n```\n\n\n:::\n:::\n\n\n\n\nModelo \"completo\"\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nratas.lme.m4 <- lme(fixed=glucogeno ~ tratamiento, data=ratas_g, \n                random=~1|rata/muestraH, method=\"ML\") \nratas.lme.m4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed-effects model fit by maximum likelihood\n  Data: ratas_g \n  Log-likelihood: -116.6353\n  Fixed: glucogeno ~ tratamiento \n  (Intercept) tratamientot2 tratamientot3 \n   140.500000     10.500000     -5.333333 \n\nRandom effects:\n Formula: ~1 | rata\n        (Intercept)\nStdDev:    3.729149\n\n Formula: ~1 | muestraH %in% rata\n        (Intercept) Residual\nStdDev:    3.763794 4.600775\n\nNumber of Observations: 36\nNumber of Groups: \n              rata muestraH %in% rata \n                 6                 18 \n```\n\n\n:::\n:::\n\n\n\n\nAsí podemos comparar el análisis con modelos mixtos y el convencional en cuanto al efecto del tratamiento.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(ratas.lme.m4, ratas.lme.m3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             Model df      AIC      BIC    logLik   Test  L.Ratio p-value\nratas.lme.m4     1  6 245.2705 254.7716 -116.6353                        \nratas.lme.m3     2  4 247.7667 254.1008 -119.8834 1 vs 2 6.496197  0.0388\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nratas.completo.lm <- lm(glucogeno~tratamiento/rata/muestraH, data=ratas_g)\nanova(ratas.completo.lm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: glucogeno\n                          Df  Sum Sq Mean Sq F value    Pr(>F)    \ntratamiento                2 1557.56  778.78 36.7927 4.375e-07 ***\ntratamiento:rata           3  797.67  265.89 12.5617 0.0001143 ***\ntratamiento:rata:muestraH 12  594.00   49.50  2.3386 0.0502907 .  \nResiduals                 18  381.00   21.17                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n### Intervalos de confianza\n\nEs importante contar con intervalos de confianza para describir de mmejor manera los resultados obtenidos. La forma de hacerlo para cada tipo de modelo pude varia, así que ilustraré un par de rutas para obtenerlos.\n\n## Modelo de efectos mixtos: `lme`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nratas.lme4.ic <- predict(ratas.lme.m4, level = 0, type = \"predict\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nratas.lme4.ic  <- data.frame(ajustado=as.numeric(ratas.lme4.ic), tratamiento=ratas_g$tratamiento)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nintervals(ratas.lme.m4)$fixed\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   lower       est.      upper\n(Intercept)   133.507297 140.500000 147.492703\ntratamientot2  -4.479979  10.500000  25.479979\ntratamientot3 -20.313312  -5.333333   9.646646\nattr(,\"label\")\n[1] \"Fixed effects:\"\n```\n\n\n:::\n:::\n\n\n\n\n#### Modelo de regresión convencional: lm\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nratas.lm.ic <- as.data.frame(predict(ratas.completo.lm, interval = 'confidence',\n                                     conf.level=0.95, ci.fit=TRUE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nratas.lm.ic$tratamiento <- ratas_g$tratamiento\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.frame(min=tapply(ratas.lm.ic$lwr, ratas.lm.ic$tratamiento, mean),\n           media=tapply(ratas.lm.ic$fit, ratas.lm.ic$tratamiento, mean),\n           max=tapply(ratas.lm.ic$upr, ratas.lm.ic$tratamiento, mean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        min    media      max\nt1 133.6653 140.5000 147.3347\nt2 144.1653 151.0000 157.8347\nt3 128.3319 135.1667 142.0014\n```\n\n\n:::\n:::\n\n\n\n\nBueno, veamos los residuos!!!\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ratas.lme.m4, rata ~ resid(.) | tratamiento, xlab=\"residuos\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ratas.lme.m4)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n:::\n\n\n\n\n### Comparaciones múltiples\n\nVeamos qué está pasando con los efectos de los tratamientos una vez que hemos resuelto con la *prueba omnibus* que hay algún efecto de tratamiento.\n\nEl modelo completo, ¿cambia significativamente al *recodifcar* los tratamientos de manera que supongamos que el *t1* no difiere del *t2*? Esto equivale a comparar los dos mmodelos respectivos.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse, warn.conflicts = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::collapse() masks nlme::collapse()\n✖ dplyr::filter()   masks stats::filter()\n✖ dplyr::lag()      masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nratas_g$trat_v1 <-recode_factor(ratas_g$tratamiento, \"t2\"=\"t1\")\nratas.lme.m4A <- lme(fixed=glucogeno ~ trat_v1, data=ratas_g, \n                     random=~1|rata/muestraH, method=\"ML\") \n\nratas_g$trat_v2 <-recode_factor(ratas_g$tratamiento, \"t3\"=\"t2\")\nratas.lme.m4B <- lme(fixed=glucogeno ~ trat_v2, data=ratas_g, \n                     random=~1|rata/muestraH, method=\"ML\") \n\nratas_g$trat_v3 <-recode_factor(ratas_g$tratamiento, \"t3\"=\"t1\")\nratas.lme.m4C <- lme(fixed=glucogeno ~ trat_v3, data=ratas_g, \n                     random=~1|rata/muestraH, method=\"ML\") \nhead(ratas_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGrouped Data: glucogeno ~ 1 | ordered(rata)/muestraH\n  glucogeno tratamiento rata muestraH trat_v1 trat_v2 trat_v3\n1       131          t1   r1       m1      t1      t1      t1\n2       130          t1   r1       m1      t1      t1      t1\n3       131          t1   r1       m2      t1      t1      t1\n4       125          t1   r1       m2      t1      t1      t1\n5       136          t1   r1       m3      t1      t1      t1\n6       142          t1   r1       m3      t1      t1      t1\n```\n\n\n:::\n:::\n\n\n\n\n[¿Qué sugieren estos resultados estadísticos?]{style=\"color:GoldenRod\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(ratas.lme.m4A, ratas.lme.m4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              Model df      AIC      BIC    logLik   Test L.Ratio p-value\nratas.lme.m4A     1  5 246.8941 254.8117 -118.4471                       \nratas.lme.m4      2  6 245.2705 254.7716 -116.6353 1 vs 2 3.62358   0.057\n```\n\n\n:::\n:::\n\n\n\n\nPreguntémonos lo mismo respecto de los tratamientos *t2* y *t3*. Veamos lo que resulta al comparar los modelos\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(ratas.lme.m4B, ratas.lme.m4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              Model df      AIC      BIC    logLik   Test  L.Ratio p-value\nratas.lme.m4B     1  5 249.6292 257.5467 -119.8146                        \nratas.lme.m4      2  6 245.2705 254.7716 -116.6353 1 vs 2 6.358622  0.0117\n```\n\n\n:::\n:::\n\n\n\n\nAhora los tratamientos *t1* y *t3*. ¿qué resulta al comparar los modelos?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(ratas.lme.m4C, ratas.lme.m4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              Model df      AIC      BIC    logLik   Test  L.Ratio p-value\nratas.lme.m4C     1  5 244.4339 252.3514 -117.2169                        \nratas.lme.m4      2  6 245.2705 254.7716 -116.6353 1 vs 2 1.163313  0.2808\n```\n\n\n:::\n:::\n\n\n\n\n::: {.callou-caution style=\"color:GoldenRod\"}\n##¿Qué decisión tomarás?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(ratas.lme.m4C)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            numDF denDF  F-value p-value\n(Intercept)     1    18 4261.316  <.0001\ntrat_v3         1     4    8.116  0.0464\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nintervals(ratas.lme.m4)$fixed\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   lower       est.      upper\n(Intercept)   133.507297 140.500000 147.492703\ntratamientot2  -4.479979  10.500000  25.479979\ntratamientot3 -20.313312  -5.333333   9.646646\nattr(,\"label\")\n[1] \"Fixed effects:\"\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\nQuizás es más interesante ver los resultados en términos de los valores estimados para cada tratamiento, en lugar de sobre sus diferencias.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt(data.frame(trat_1 = intervals(ratas.lme.m4)$fixed[1,],\n             trat_2 = colSums(intervals(ratas.lme.m4)$fixed[1:2,]),\n             trat_3 = colSums(intervals(ratas.lme.m4)$fixed[1:3,])))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          lower     est.    upper\ntrat_1 133.5073 140.5000 147.4927\ntrat_2 129.0273 151.0000 172.9727\ntrat_3 108.7140 145.6667 182.6193\n```\n\n\n:::\n:::\n\n\n\n\nSi optáramos por tomar al modelo **C** como nuestro modelo mínimo adecuado para describir el experimento de glucógeno, los resultados se verían así:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(ratas.lme.m4C)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            numDF denDF  F-value p-value\n(Intercept)     1    18 4261.316  <.0001\ntrat_v3         1     4    8.116  0.0464\n```\n\n\n:::\n:::\n\n\n\n\nEste modelo sugiere que es posible argumentar que el tratamiento combinando **t1** y **t3** difiere en forma apreciable o significativa con respecto del **t2**. Esto se aprecia al considerar los valores promedio de los tratamientos, pero no es realmente muy evidente. La forma como estoy calculando los valores tiene que considerar el tipo de reparametrización y la configuración del modelo, no olvides eso.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnivel_confianza <- 0.90\nt(data.frame(trat_1 = intervals(ratas.lme.m4, level = nivel_confianza)$fixed[1,],\n             trat_2 = colSums(intervals(ratas.lme.m4, level = nivel_confianza)$fixed[1:2,]),\n                 trat_3 = colSums(intervals(ratas.lme.m4, level = nivel_confianza)$fixed[1:3,])))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          lower     est.    upper\ntrat_1 134.7283 140.5000 146.2717\ntrat_2 134.1509 151.0000 167.8491\ntrat_3 117.7401 145.6667 173.5932\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt(data.frame(trat_1_y_3 = intervals(ratas.lme.m4C, level = nivel_confianza)$fixed[1,],\n             trat_2 = colSums(intervals(ratas.lme.m4C, level = nivel_confianza)$fixed[1:2,])))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              lower     est.    upper\ntrat_1_y_3 133.3366 137.8333 142.3300\ntrat_2     136.9281 151.0000 165.0719\n```\n\n\n:::\n:::\n\n\n\n\n# Modelo de las manos\n\nHagamos juntos el reanálisis del ejemplo de las manos como un modelo de efectos mixto.\n\n\n::: {.callout-note}\n## El modelo puede ser este\n\n\n$$\ny_{ijk} = \\mu +  L_i + \\eta_{j(i)} + \\varepsilon_{k(ij)}\n$$\n\n+ ¿Te parece adecuado? \n+ ¿Lo puedes explicar?\n\n:::\n\nEn caso de que no tengas los datos de las manos por ahí, te recuerdo como obtenerlos de nuestro repositorio en Google drive.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stringr)\nurl_manos <- \"https://drive.google.com/file/d/1GSQMbbX7szydnIMDkWYDBlFBWqTdkC4k/view?usp=drive_link\"\ndat_manos_id <- str_extract(url_manos, \"(?<=d/)(.*)(?=/view)\")\n\nurl_drive <- \"https://docs.google.com/uc?id=%s&export=download\" \nmanos <- read.csv(sprintf(url_drive, dat_manos_id)) \n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}